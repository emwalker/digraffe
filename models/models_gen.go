// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type CreateTopicInput struct {
	ClientMutationID string   `json:"clientMutationId"`
	Description      *string  `json:"description"`
	Name             string   `json:"name"`
	OrganizationID   string   `json:"organizationId"`
	TopicIds         []string `json:"topicIds"`
}

type CreateTopicPayload struct {
	TopicEdge TopicEdge `json:"topicEdge"`
}

type Link struct {
	ID           *string          `json:"id"`
	Organization Organization     `json:"organization"`
	ResourceID   string           `json:"resourceId"`
	ResourcePath string           `json:"resourcePath"`
	Title        string           `json:"title"`
	URL          string           `json:"url"`
	Topics       *TopicConnection `json:"topics"`
}

func (Link) IsResourceIdentifiable() {}
func (Link) IsNamespaceable()        {}

type LinkConnection struct {
	Edges    []*LinkEdge `json:"edges"`
	PageInfo PageInfo    `json:"pageInfo"`
}

type LinkEdge struct {
	Cursor string `json:"cursor"`
	Node   *Link  `json:"node"`
}

type Namespaceable interface {
	IsNamespaceable()
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
}

type ResourceIdentifiable interface {
	IsResourceIdentifiable()
}

type SelectTopicInput struct {
	OrganizationID string `json:"organizationId"`
	TopicID        string `json:"topicId"`
}

type SelectTopicPayload struct {
	Topic *Topic `json:"topic"`
}

type TopicConnection struct {
	Edges    []*TopicEdge `json:"edges"`
	PageInfo PageInfo     `json:"pageInfo"`
}

type TopicEdge struct {
	Cursor string `json:"cursor"`
	Node   *Topic `json:"node"`
}

type UpsertLinkInput struct {
	AddTopicIds      []string `json:"addTopicIds"`
	ClientMutationID string   `json:"clientMutationId"`
	OrganizationID   string   `json:"organizationId"`
	ResourceID       *string  `json:"resourceId"`
	Title            *string  `json:"title"`
	URL              string   `json:"url"`
}

type UpsertLinkPayload struct {
	LinkEdge LinkEdge `json:"linkEdge"`
}
