type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type User {
  id: ID
  name: String!
  email: String!
}

type Topic {
  id: ID
  organization: Organization!
  description: String!
}

type TopicEdge {
  cursor: String!
  node: Topic
}

type TopicConnection {
  edges: [TopicEdge]
  pageInfo: PageInfo!
}

type Query {
  viewer: User
  organization(
    id: ID,
    databaseId: String,
  ): Organization
}

type Organization {
  id: ID
  name: String!
  topics(
    first: Int,
    after: String,
    last: Int,
    before: String
  ): TopicConnection
}

type Mutation {
  createUser(email: String!): User
  removeUser(id: ID!): Boolean
}
